/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.Client;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 * @author Admin
 */
public class FindRoomFrm extends javax.swing.JFrame {
    private Timer timer;
    private boolean found;

    /**
     * Creates new form FindRoomFrm
     */
  public FindRoomFrm() {
    initComponents();
    this.setTitle("Caro Game Nhóm 4");
    this.setIconImage(new ImageIcon("assets/image/caroicon.png").getImage());
    this.setResizable(false);
    this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    this.setLocationRelativeTo(null);

    // --- Màu sắc ---
    java.awt.Color mintDark = new java.awt.Color(0, 150, 136);
    java.awt.Color mintLight = new java.awt.Color(224, 242, 241);
    java.awt.Color orangeDeep = new java.awt.Color(255, 87, 34);
    java.awt.Color blueAccent = new java.awt.Color(33, 150, 243);

    getContentPane().setBackground(java.awt.Color.WHITE);

    // --- Icon ---
    jLabel5.setIcon(new ImageIcon("assets/icon/loading1.gif"));
    loadingButton.setIcon(new ImageIcon("assets/icon/door_exit.png"));

    // --- Progress bar ---
    jProgressBar1.setValue(70);
    jProgressBar1.setForeground(mintDark);
    jProgressBar1.setBackground(mintLight);

    // --- Labels ---
    foundLabel.setVisible(false);
    foundLabel.setForeground(new java.awt.Color(76, 175, 80)); // xanh lá

    findingLabel.setForeground(blueAccent);
    findingLabel.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 13));

    countDouwnTimeLabel.setForeground(orangeDeep);
    countDouwnTimeLabel.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 18));

    // --- Start timer ---
    found = false;
    startFind();
    sendFindRequest();
}

public void stopAllThread() {
    if (timer != null) timer.stop();
}
// Màu đỏ khi gần hết giờ
java.awt.Color deepRed = new java.awt.Color(211, 47, 47); // #D32F2F

public void startFind() {
    foundLabel.setVisible(false);
    jLabel5.setVisible(false);

    timer = new Timer(1000, new ActionListener() {
        int count = 20;

        @Override
        public void actionPerformed(ActionEvent e) {
            count--;

            if (count >= 0) {
                countDouwnTimeLabel.setText(String.format("00:%02d", count));
                jProgressBar1.setValue(Math.round((float) count / 20 * 100));

                // === Đổi màu theo thời gian ===
                if (count > 10) {
                    jProgressBar1.setForeground(new java.awt.Color(0, 150, 136)); // mintDark
                } else if (count > 5) {
                    jProgressBar1.setForeground(new java.awt.Color(255, 87, 34)); // orangeDeep
                } else {
                    jProgressBar1.setForeground(new java.awt.Color(211, 47, 47)); // deepRed
                }

            } else {
                ((Timer) (e.getSource())).stop();
                try {
                    Client.socketHandle.write("cancel-room,");
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                }

                int res = JOptionPane.showConfirmDialog(rootPane, "Tìm kiếm thất bại, bạn muốn thử lại lần nữa chứ?");
                if (res == JOptionPane.YES_OPTION) {
                    startFind();
                    sendFindRequest();
                } else {
                    Client.closeView(Client.View.FIND_ROOM);
                    Client.openView(Client.View.HOMEPAGE);
                }
            }
        }
    });
    timer.setInitialDelay(0);
    timer.start();
}


public void sendFindRequest() {
    try {
        Client.socketHandle.write("quick-room,");
    } catch (IOException ex) {
        JOptionPane.showMessageDialog(rootPane, ex.getMessage());
    }
}

public void showFoundRoom() {
    found = true;
    if (timer != null) timer.stop();
    foundLabel.setVisible(true);
    jLabel5.setVisible(true);
    findingLabel.setVisible(false);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        frameLabel = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        findingLabel = new javax.swing.JLabel();
        countDouwnTimeLabel = new javax.swing.JLabel();
        foundLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        loadingButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));

        frameLabel.setBackground(new java.awt.Color(255, 255, 255));
        frameLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        frameLabel.setForeground(new java.awt.Color(255, 255, 255));
        frameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        frameLabel.setText("Tìm phòng nhanh");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(frameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 528, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(frameLabel)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        findingLabel.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        findingLabel.setText("Đang tìm đối thủ");

        countDouwnTimeLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        countDouwnTimeLabel.setText("00:20");

        foundLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        foundLabel.setForeground(new java.awt.Color(0, 51, 204));
        foundLabel.setText("Đã tìm thấy đối thủ, đang vào phòng");

        loadingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadingButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(countDouwnTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(239, 239, 239))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(findingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(200, 200, 200))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(89, 89, 89)
                            .addComponent(foundLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(loadingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(countDouwnTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(findingLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foundLabel)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadingButtonActionPerformed
        if (found)
            return;
        try {
            Client.socketHandle.write("cancel-room,");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        timer.stop();
        Client.closeView(Client.View.FIND_ROOM);
        Client.openView(Client.View.HOMEPAGE);
    }//GEN-LAST:event_loadingButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel countDouwnTimeLabel;
    private javax.swing.JLabel findingLabel;
    private javax.swing.JLabel foundLabel;
    private javax.swing.JLabel frameLabel;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JButton loadingButton;
    // End of variables declaration//GEN-END:variables
}
